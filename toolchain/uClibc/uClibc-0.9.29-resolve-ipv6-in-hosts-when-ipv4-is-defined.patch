From d636d0b5322c04f8a6958eab205685d91d3df47d Mon Sep 17 00:00:00 2001
From: Hans-Christian Egtvedt <hcegtvedt@atmel.com>
Date: Tue, 7 Aug 2007 13:49:48 +0200
Subject: [PATCH 1/1] Resolve IPv6 hosts in /etc/hosts even if similar IPv4 hosts is declared

This patch fixes two erros in host lookup for IPv6.

1) gethostbyname2_r calls __get_hosts_byname_r, but with AF_INET as type.

2) When __read_etc_hosts_r is searching for an IPv6 address and encounters an
IPv4 address, it stops searching and returns an error. This prevents the user
from having IPv4 and IPv6 addresses for the same host name.

http://bugs.uclibc.org/view.php?id=206

Signed-off-by: Hans-Christian Egtvedt <hcegtvedt@atmel.com>
---
 libc/inet/resolv.c |   12 +++++++++---
 1 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/libc/inet/resolv.c b/libc/inet/resolv.c
index f4e6cac..e1d13ab 100644
--- a/libc/inet/resolv.c
+++ b/libc/inet/resolv.c
@@ -1643,7 +1643,7 @@ int attribute_hidden __read_etc_hosts_r(FILE * fp, const char * name, int type,
 			*result=result_buf;
 			ret=NETDB_SUCCESS;
 #ifdef __UCLIBC_HAS_IPV6__
-        } else if (type == AF_INET6 && inet_pton(AF_INET6, alias[0], in6) > 0) {
+		} else if (type == AF_INET6 && inet_pton(AF_INET6, alias[0], in6) > 0) {
 			DPRINTF("Found INET6\n");
 			addr_list6[0] = in6;
 			addr_list6[1] = 0;
@@ -1658,8 +1658,8 @@ int attribute_hidden __read_etc_hosts_r(FILE * fp, const char * name, int type,
 		} else {
 			DPRINTF("Error\n");
 			ret=TRY_AGAIN;
-			break; /* bad ip address */
-        }
+			continue; /* bad ip address */
+		}
 
 		if (action!=GETHOSTENT) {
 			fclose(fp);
@@ -2010,8 +2010,14 @@ int gethostbyname_r(const char * name,
 		__set_errno(0);			/* to check for missing /etc/hosts. */
 
 		if ((i=__get_hosts_byname_r(name, AF_INET, result_buf,
+									buf, buflen, result, h_errnop))==0) {
+#ifdef __UCLIBC_HAS_IPV6__
+			if (i=TRY_AGAIN)
+				if ((i=__get_hosts_byname_r(name, AF_INET6, result_buf,
 									buf, buflen, result, h_errnop))==0)
+#endif
 			return i;
+		}
 		switch (*h_errnop) {
 			case HOST_NOT_FOUND:
 			case NO_ADDRESS:
-- 
1.5.2.3

