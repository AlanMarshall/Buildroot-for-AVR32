From hcegtvedt@atmel.com Tue Feb  5 14:10:40 2008
Return-Path: <hcegtvedt@atmel.com>
Received: from relay.atmel.no ([unix socket]) by pat.norway.atmel.com
	(Cyrus v2.2.12) with LMTPA; Tue, 05 Feb 2008 14:10:40 +0100
X-Sieve: CMU Sieve 2.2
Received: from sjogate2.atmel.com (sjogate2.atmel.com [10.64.0.119]) by
	relay.atmel.no (8.13.4/8.13.4) with ESMTP id m15DAbdq014612 for
	<hcegtvedt@pat.norway.atmel.com>; Tue, 5 Feb 2008 14:10:39 +0100 (CET)
	(envelope-from hcegtvedt@atmel.com)
Received: from relay.atmel.no (pat.norway.atmel.com [10.191.254.102]) by
	sjogate2.atmel.com (8.13.6/8.13.6) with ESMTP id m15DAvtC003417 for
	<hcegtvedt@sjogate2.atmel.com>; Tue, 5 Feb 2008 05:11:00 -0800 (PST)
Received: from localhost.localdomain (dhcp-252-083.norway.atmel.com
	[10.191.252.83]) by relay.atmel.no (8.13.4/8.13.4) with ESMTP id
	m15DAMa1014595; Tue, 5 Feb 2008 14:10:22 +0100 (CET) (envelope-from
	hcegtvedt@atmel.com)
Received: by localhost.localdomain (Postfix, from userid 1000) id
	12191137793; Tue,  5 Feb 2008 14:09:43 +0100 (CET)
From: Hans-Christian Egtvedt <hcegtvedt@atmel.com>
To: kernel@avr32linux.org
Cc: Hans-Christian Egtvedt <hcegtvedt@atmel.com>
Subject: [PATCH 1/3] Add support for reset line and DMA info in platform
	data to AVR32 AC97C
Date: Tue,  5 Feb 2008 14:09:41 +0100
Message-Id: <12022169832799-git-send-email-hcegtvedt@atmel.com>
X-Mailer: git-send-email 1.5.2.5
X-Evolution-Source: imap://hcegtvedt@imap.norway.atmel.com/
Content-Transfer-Encoding: 8bit
Mime-Version: 1.0

This patch adds support for specifying a GPIO line which is connected to the
codecs reset line. Some codecs needs this reset pin toggled before it can be
accessed.

The patch also moves the DMA platform data into the platform data.

Tested with a Wolfson WM9712 and AP7000.

Signed-off-by: Hans-Christian Egtvedt <hcegtvedt@atmel.com>
---
 sound/avr32/ac97c.c |   42 ++++++++++++++++++++++++++++++++++++------
 1 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/sound/avr32/ac97c.c b/sound/avr32/ac97c.c
index 0ec0b1c..3a58375 100644
--- a/sound/avr32/ac97c.c
+++ b/sound/avr32/ac97c.c
@@ -25,6 +25,8 @@
 #include <sound/ac97_codec.h>
 #include <sound/memalloc.h>
 
+#include <asm/gpio.h>
+#include <asm/arch/board.h>
 #include <asm/dma-controller.h>
 
 #include "ac97c.h"
@@ -37,6 +39,7 @@ struct atmel_ac97_dma_info {
 	struct dma_request_cyclic req_rx;
 	unsigned short rx_periph_id;
 	unsigned short tx_periph_id;
+	unsigned short controller;
 };
 
 struct atmel_ac97 {
@@ -51,6 +54,7 @@ struct atmel_ac97 {
 	struct snd_ac97_bus *ac97_bus;
 	int opened;
 	int period;
+	int reset_pin;
 	u64 cur_format;
 	unsigned int cur_rate;
 	struct clk *mck;
@@ -692,6 +696,12 @@ timed_out:
 
 static void snd_atmel_ac97_reset(struct atmel_ac97 *chip)
 {
+	if (chip->reset_pin >= 0) {
+		gpio_set_value(chip->reset_pin, 0);
+		udelay(5);
+		gpio_set_value(chip->reset_pin, 1);
+	}
+
 	ac97c_writel(chip, MR, AC97C_MR_WRST);
 	mdelay(1);
 	ac97c_writel(chip, MR, AC97C_MR_ENA);
@@ -727,6 +737,7 @@ static int __devinit snd_atmel_ac97_create(struct snd_card *card,
 		.read	= snd_atmel_ac97_read,
 	};
 	struct atmel_ac97 *chip = get_chip(card);
+	struct ac97c_platform_data *pdata;
 	struct resource *regs;
 	struct clk *mck;
 	int err;
@@ -735,6 +746,29 @@ static int __devinit snd_atmel_ac97_create(struct snd_card *card,
 	if (!regs)
 		return -ENXIO;
 
+	pdata = pdev->dev.platform_data;
+	if (pdata) {
+		chip->reset_pin = pdata->reset_pin;
+
+		if (chip->reset_pin >= 0) {
+			if (gpio_request(chip->reset_pin,
+						chip->card->shortname)) {
+				dev_dbg(&pdev->dev,
+						"ac97: reset pin "
+						"not available\n");
+				chip->reset_pin = -1;
+			} else {
+				gpio_direction_output(chip->reset_pin, 1);
+			}
+		}
+
+		chip->dma.rx_periph_id = pdata->dma_rx_periph_id;
+		chip->dma.tx_periph_id = pdata->dma_tx_periph_id;
+		chip->dma.controller = pdata->dma_controller_id;
+	} else {
+		return -ENXIO;
+	}
+
 	mck = clk_get(&pdev->dev, "pclk");
 	if (IS_ERR(mck))
 		return PTR_ERR(mck);
@@ -789,23 +823,19 @@ static int __devinit snd_atmel_ac97_probe(struct platform_device *pdev)
 	if (err)
 		goto out_free_card;
 
-	/* TODO: Get this information from the platform device */
-	chip->dma.req_tx.req.dmac = find_dma_controller(0);
+	chip->dma.req_tx.req.dmac = find_dma_controller(chip->dma.controller);
 	if (!chip->dma.req_tx.req.dmac) {
 		dev_dbg(&chip->pdev->dev, "DMA controller for TX missing\n");
 		err = -ENODEV;
 		goto out_free_card;
 	}
-	chip->dma.req_rx.req.dmac = find_dma_controller(0);
+	chip->dma.req_rx.req.dmac = find_dma_controller(chip->dma.controller);
 	if (!chip->dma.req_rx.req.dmac) {
 		dev_dbg(&chip->pdev->dev, "DMA controller for RX missing\n");
 		err = -ENODEV;
 		goto out_free_card;
 	}
 
-	chip->dma.rx_periph_id = 3;
-	chip->dma.tx_periph_id = 4;
-
 	ch = dma_alloc_channel(chip->dma.req_tx.req.dmac);
 	if (ch < 0) {
 		dev_dbg(&chip->pdev->dev,
-- 
1.5.2.5

